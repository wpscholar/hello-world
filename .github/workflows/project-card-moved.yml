name: Update Project Card Status

on:
  repository_dispatch:
    types:
      - 'project-card-events'

env:
  GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

jobs:
  card-moved:
    name: Card Moved
    runs-on: ubuntu-latest
    steps:

      - name: Test
        run: |
          echo $(jq -r '.projects_v2_item.project_node_id' <<< '${{ toJson( github.event.client_payload ) }}')

      - name: Get project data
        env:
          USER: wpscholar
          PROJECT_NUMBER: 1
        run: |
          
          gh api graphql -f query='
            query($user: String!, $number: Int!){
              user(login: $user){
                projectV2(number: $number) {
                  id
                  title,
                  fields(first:50) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
          }' -f user=$USER -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.user.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'WEBHOOK_PROJECT_ID='$(jq -r '.projects_v2_item.project_node_id' <<< '${{ toJson( github.event.client_payload ) }}') >> $GITHUB_ENV
          echo 'ITEM_ID='$(jq -r '.projects_v2_item.node_id' <<< '${{ toJson( github.event.client_payload ) }}') >> $GITHUB_ENV
          echo 'ADMIN_STATUS_ID='$(jq '.data.user.projectV2.fields.nodes[] | select(.name == "Admin Status") | .id ' project_data.json)
          echo 'ADMIN_STATUS_IN_PROGRESS_ID='$(jq '.data.user.projectV2.fields.nodes[] | select(.name == "Admin Status") | .options[] | select(.name == "In Progress") | .id ' project_data.json)
          
          echo "PROJECT_ID=${{ env.PROJECT_ID }}"
          echo "WEBHOOK_PROJECT_ID=${{ env.WEBHOOK_PROJECT_ID }}"
          echo "ITEM_ID=${{ env.ITEM_ID }}"
          echo "ADMIN_STATUS_ID=${{ env.ADMIN_STATUS_ID }}"
          echo "ADMIN_STATUS_ID_IN_PROGRESS=${{ env.ADMIN_STATUS_ID_IN_PROGRESS }}"

      - name: Update card
        if: env.PROJECT_ID == env.WEBHOOK_PROJECT_ID
        run: |
          gh api graphql -f query='
            mutation {
              updateProjectV2ItemFieldValue(
                  input: {
                    projectId: "${{ env.PROJECT_ID }}"
                    itemId: "${{ env.ITEM_ID }}"
                    fieldId: "${{ env.ADMIN_STATUS_ID }}"
                    value: {
                      singleSelectOptionId: "${{ env.ADMIN_STATUS_IN_PROGRESS_ID }}"
                    }
                  }
                ) {
                projectV2Item {
                  id
                }
              }
           }'

      - uses: actions/upload-artifact@v3
        with:
          name: json
          path: |
            client_payload.json
            project_data.json
